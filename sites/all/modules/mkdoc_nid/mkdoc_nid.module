<?php 


/**
 * Implementation of hook_filter()
 */
function mkdoc_nid_filter($op, $delta = 0, $format = -1, $text = '') {
  dsm('******************mkdoc_filter*****');
  dsm($op);
  switch ($op) {
  case 'list':
    return array(0 => t('Insert node'));

  case 'description':
    return t('By including the syntax (*.md), this filter will embed the node with given NID');

  case 'prepare':
    return $text;

  case 'no cache':
    return TRUE;

  case "process":

	$viewNid = mkdoc_nid_getCurrentNodeId();
	$bookId = mkdoc_nid_getCurrentBookId($viewNid);

    return preg_replace_callback('/\(([^(]*\.md)\)/', function($matches) {
		
		if(is_numeric($bookId)) {
			$linkNames = $GLOBALS['mkdocLinkNames-'.$bookId];	
		}

		$nid = mkdoc_nid_getNodeId($matches[0]);
dsm($matches[0].'----'.$nid);
		$output = '<a href="'.$nid.'">'.$matches[0].'</a>';

		return $output;
		
	}, $text);
  }
}
/*
function mkdoc_nid_getNodeId($mdName) {

	$mkdoc = MkDoc::getInstance();
	$linkNames = $mkdoc->getLinkNames();
	//dsm($linkNames);

}
*/

/**
 * Implementation of hook_filter_tips()
 */
function mkdoc_nid_filter_tips($delta, $format, $long = FALSE) {
  return t('[[nid:123]] - insert a node content');
}

function mkdoc_nid_init() {
	dsm('mkdoc_nid_init');	
	//mkdoc_nid_getNodeId();
}

function mkdoc_nid_getCurrentNodeId() {
	return substr($_GET['q'],strrpos($_GET['q'],"/")+1); 	
}

function mkdoc_nid_getCurrentBookId($viewId) {

	if(is_numeric($viewId)) {
		$viewNode = node_load($viewId);

		if($viewNode->book) {
			$bookId = $viewNode->book['bid'];
			return $bookId;
		}
	}

	return NULL;
	
}

function mkdoc_nid_getNodeId($mdName) {
dsm('-------mkdoc_nid_getNodeId---'.$mdName);
	$viewNid = mkdoc_nid_getCurrentNodeId(); 
	dsm('-------viewId---'.$viewNid);
	if(is_numeric($viewNid)) {
		$bookId = mkdoc_nid_getCurrentBookId($viewNid);
		dsm('-------bookid----'.$bookId);
		if(is_numeric($bookId)) {
			dsm($bookId);
			//$bookNode = node_load($bookId);
			//dsm($bookNode);

			$mkdoc = MkDoc::getInstance();
			$datamk = $mkdoc->getMkdocsFromDb($bookId);
			$linkNames = $datamk->pagesByLinkName;
			$nodeIds = $datamk->pagesByNodeId;

			$GLOBALS['mkdocLinkNames-'.$bookId] = $linkNames;
			$GLOBALS['mkdocNodeIds-'.$bookId] = $nodeIds;

			dsm($linkNames);

			return $linkNames[$mdName];
		}
	}
	
	
}


function mkdoc_nid_preprocess_node() {
	dsm('mkdoc_nid_preprocess_node');	
}

