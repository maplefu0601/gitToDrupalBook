<?php 


/**
 * Implementation of hook_filter()
 */
function mkdoc_nid_filter($op, $delta = 0, $format = -1, $text = '') {
  dsm('******************mkdoc_filter*****');
  dsm($op);
  switch ($op) {
  case 'list':
    return array(0 => t('Mark doc to node id'));

  case 'description':
    return t('By including the syntax (*.md), this filter will embed the node with given NID');

  case 'prepare':
    return $text;

  case 'no cache':
    return TRUE;

  case "process":

	//$viewNid = mkdoc_nid_getCurrentNodeId();
	//$bookId = mkdoc_nid_getCurrentBookId($viewNid);
	dsm($text);
    return preg_replace_callback('/\(([^(]*\.md)\)/', function($matches) {
		
		//if(is_numeric($bookId)) {
		//	$linkNames = $GLOBALS['mkdocLinkNames-'.$bookId];	
		//}

		$nid = mkdoc_nid_getNodeId($matches[1]);
//dsm($matches[1].'----'.$nid);
		if($nid === NULL) {
			$output = $matches[0];	
		} else {
			$output = '<a href="'.$nid.'">'.$matches[0].'</a>';
		}

		return $output;
		
	}, $text);
  }
}
/*
function mkdoc_nid_getNodeId($mdName) {

	$mkdoc = MkDoc::getInstance();
	$linkNames = $mkdoc->getLinkNames();
	////dsm($linkNames);

}
*/

/**
 * Implementation of hook_filter_tips()
 */
function mkdoc_nid_filter_tips($delta, $format, $long = FALSE) {
  return t('[[md link]] - replace md file link to node id');
}

function mkdoc_nid_init() {
	//dsm('mkdoc_nid_init');	
	//mkdoc_nid_getNodeId();
}

function mkdoc_nid_getCurrentNodeId() {
	return substr($_GET['q'],strrpos($_GET['q'],"/")+1); 	
}

function mkdoc_nid_getCurrentBookId($viewId) {

	if(is_numeric($viewId)) {
		$viewNode = node_load($viewId);

		if($viewNode->book) {
			$bookId = $viewNode->book['bid'];
			return $bookId;
		}
	}

	return NULL;
	
}

function mkdoc_nid_getNodeId($mdName) {
dsm('-------mkdoc_nid_getNodeId---'.$mdName);
	$viewNid = mkdoc_nid_getCurrentNodeId(); 
	//dsm('-------viewId---'.$viewNid);
	if(is_numeric($viewNid)) {
		$bookId = mkdoc_nid_getCurrentBookId($viewNid);
		//dsm('-------bookid----'.$bookId);
		if(is_numeric($bookId)) {
			//dsm($bookId);
			//$bookNode = node_load($bookId);
			////dsm($bookNode);

			$mkdoc = MkDoc::getInstance();
			$datamk = $mkdoc->getMkdocsFromDb($bookId);
			dsm($datamk);
			$linkNames = $datamk->pagesByLinkName;
			$nodeIds = $datamk->pagesByNodeId;

			//$GLOBALS['mkdocLinkNames-'.$bookId] = $linkNames;
			//$GLOBALS['mkdocNodeIds-'.$bookId] = $nodeIds;

			//dsm($linkNames[$mdName]);
			//dsm($linkNames[$mdName]->nodeId);

			$pos = strpos($mdName, '/');
			if($pos === false) {//md file name only

				//dsm('=======no subfolder in md link=======');
				$mdLink = $nodeIds[$viewNid]->mdLink;
				//dsm($mdLink);
				$folder = substr($mdLink, 0, strpos($mdLink, '/'));
				//dsm($folder);
				if($folder != '') {

					return $linkNames[$folder.'/'.$mdName]->nodeId;
				} else {
					return $linkNames[$mdName]->nodeId;	
				}

			} else if($mdName[0] === '/') {
				$mdName = substr($mdName, 1);	
			} else {
					
				$mdLink = $nodeIds[$viewNid]->mdLink;
				//dsm($mdLink);
				$folder = substr($mdLink, 0, strpos($mdLink, '/'));
				//dsm($folder);
				if($folder != '') {

					return $linkNames[$folder.'/'.$mdName]->nodeId;
				} else {
					return $linkNames[$mdName]->nodeId;	
				}
			}

			return $linkNames[$mdName]->nodeId;
		}
	}

	return NULL;
	
	
}


function mkdoc_nid_preprocess_node() {
	//dsm('mkdoc_nid_preprocess_node');	
}

